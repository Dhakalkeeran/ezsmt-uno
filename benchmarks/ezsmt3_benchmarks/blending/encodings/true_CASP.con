%#include <csp>.

#theory lp {
    lin_term {
    - : 2, unary;
    * : 1, binary, left;
    + : 0, binary, left;
    - : 0, binary, left
    };
    bounds{
    - : 4, unary;
    * : 3, binary, left;
    / : 2, binary, left;
    + : 1, binary, left;
    - : 1, binary, left;
    .. : 0, binary, left
    };

    &lp/0   : lin_term, {<=,>=,>,<,=,!=}, bounds, any;
    %&dom/0 : bounds, {=}, lin_term, head;
    &sum/0   : lin_term, {<=,>=,>,<,=,!=}, bounds, any
    %&objective/1 : lin_term, head;
    %&minimize/0 : lin_term, head;
    %&maximize/0 : lin_term, head
}.

&sum {q(X)}<=100 :- subs(X).
&sum {p(X)}<=1000 :- subs(X).
&sum {c(Y,X)}<=20000 :- subs(X), comp(Y).
&sum {q(X)}>=0 :- subs(X).
&sum {p(X)}>=0 :- subs(X).
&sum {c(Y,X)}>=0 :- subs(X), comp(Y).

{used(X)} :- subs(X).
&sum { q(X)}=0 :- not used(X), subs(X).
&sum { q(X)}>0 :- used(X), subs(X).

&sum {p(X); -Y * q(X)} = Z :- subs(X), cost(X,Y), used(X), using_cost(Z).
&sum { p(X)}=0  :- subs(X), cost(X,Y), not used(X).

&sum { c(Y,X) - q(X)*Z} =0 :- subs(X), comp(Y), tab(X,Y,Z).

&sum {c(Y,X):subs(X)}>= Z :- comp(Y), mi(Y,Z).

&sum {p(X):subs(X)}<= M :- max_money(M).

:- used(X), used(Y), not_together(X,Y).

&sum { Z*q(X) }>=Y :- have_to_use(X,Y,Z).
