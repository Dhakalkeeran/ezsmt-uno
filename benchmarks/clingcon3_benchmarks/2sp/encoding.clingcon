%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% A CASP program of 2 dimensional strip packing problem
% @author Mutsunori Banbara
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

dummy.
max(X) :- width(W), X=#max[dummy=ub, width(W)=W].
$domain(0..X) :- max(X).
% X-coordinates
%int(x(I), 0, W-X) :- r(I,X,Y), width(W).
x(I) $<= U :- r(I,X,Y), width(W), U=W-X.
%$dom(x(I),0..U) :- r(I,X,Y), width(W), U=W-X.

% Y-coordinates
%int(y(I), 0, ub-Y) :- r(I,X,Y).
%$dom(y(I),0..U) :- r(I,X,Y), U=ub-Y.
y(I) $<= U :- r(I,X,Y), U=ub-Y.

% Not-overlapping constraints
1 { le(x(I),XI,x(J)),
    le(x(J),XJ,x(I)), 
    le(y(I),YI,y(J)), 
    le(y(J),YJ,y(I)) } :- r(I,XI,YI), r(J,XJ,YJ), I < J.

    dom(y(J),YJ,y(I)) :- r(I,XI,YI), r(J,XJ,YJ), I < J.
    dom(y(I),YI,y(J)) :- r(I,XI,YI), r(J,XJ,YJ), I < J.
    dom(x(J),XJ,x(I)) :- r(I,XI,YI), r(J,XJ,YJ), I < J.
    dom(x(I),XI,x(J)) :- r(I,XI,YI), r(J,XJ,YJ), I < J.

% X+C <= Y
:- le(X,C,Y), X $- Y $> -C. %not &sum{X; -Y} <= -C.
:- not le(X,C,Y), not X $- Y $> -C, dom(X,C,Y). %not &sum{X; -Y} <= -C.


y(I) $+ Y $<= height :- r(I,X,Y).

lb $<= height.
ub $>= height.

$minimize {height}.



